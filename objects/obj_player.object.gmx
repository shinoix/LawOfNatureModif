<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_imobile</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
lvl = 1;
spd = 4;
xpCap = 3;
xp = 0;
back = 0;
side =0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Player mouvement
hspeed = spd * (keyboard_check(vk_right) - keyboard_check(vk_left));
vspeed = spd * (keyboard_check(vk_down) - keyboard_check(vk_up));

//Collisions
if hspeed!=0
if !place_free(x+hspeed,y)
{
    if hspeed&gt;0 move_contact_solid(0,hspeed) 
    if hspeed&lt;0 move_contact_solid(180,-hspeed)
    hspeed=0;
}
if vspeed!=0
if !place_free(x+hspeed,y+vspeed)
{
    if vspeed&gt;0 move_contact_solid(270,vspeed) 
    if vspeed&lt;0 move_contact_solid(90,-vspeed)
    vspeed=0;
}

//Sprite choice
image_speed=0.3;
if(keyboard_check(vk_up))//Player going up
{
    back=1;
    sprite_index=spr_player_dos;
}
if(keyboard_check(vk_down))//Player going bot
{
    back=0; 
    sprite_index=spr_player;
}
if(keyboard_check(vk_nokey))//Player stop moving
{
    if (back=1)
    {
    sprite_index=spr_player_dos_imobile;
    }
    else
    {
    sprite_index=spr_player_imobile;
    }
}
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
